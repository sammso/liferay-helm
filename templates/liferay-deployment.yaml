apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ template "liferay.fullname" . }}
    labels:
      app: {{ template "liferay.name" . }}
      chart: {{ template "liferay.chart" . }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
spec:
    selector:
        matchLabels:
            app: {{ .Release.Name }}-liferay
            type: portal
    progressDeadlineSeconds: 600
    replicas: 1
    strategy:
        rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
        type: RollingUpdate
    template:
        metadata:
            labels:
              app: {{ .Release.Name }}-liferay
              type: portal
        spec:
            initContainers:
              - name: init-s3
                image: busybox:1.32
                command: ['sh', '-c', "date; until nslookup {{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local; do echo waiting for minio; sleep 2; done; date"]
              - name: init-elasticsearch
                image: busybox:1.32
                command: ['sh', '-c', "date; until nslookup elasticsearch-master.{{ .Release.Namespace }}.svc.cluster.local; do echo waiting for elasticsearch; sleep 2; done; date"]
              - name: init-mysql
                image: busybox:1.32
                command: ['sh', '-c', "date; until nslookup {{ .Release.Name }}-mysql.{{ .Release.Namespace }}.svc.cluster.local; do echo waiting for mysql; sleep 2; done; date; sleep 60 ; date"]
              - name: init-lifekube
                image: sohlman/lifekube:20201104-2
                command: ['sh', '-c', "cd /files ; cp -R * /opt/liferay/osgi/lifekube"]
                volumeMounts:
                - name: lifekube
                  mountPath: /opt/liferay/osgi/lifekube
            containers:
            - env:
              {{- range $key, $value := .Values.environmentalVariables }}
              - name: {{ $key }}
                value: "{{ $value }}"
              {{- end }}
              - name: KUBERNETES_DEPLOYTIME
                value: "{{ now  }}"
              image: "{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              resources:
                requests: 
                  memory: "4096Mi"
                  cpu: "4"
                limits: 
                  memory: "8128Mi"
                  cpu: "8"
              name: liferay-portal
              ports:
              - name: httpslinks
                containerPort: 8080
                protocol: TCP
              - name: httplinks
                containerPort: 8081
                protocol: TCP
              - name: gogoshell
                containerPort: 11311
                protocol: TCP
              - name: jgroups
                containerPort: 7080
                protocol: TCP           
              lifecycle:
                preStop:
                  exec:
                    command:
                    - /home/liferay/tomcat/bin/shutdown.sh
              livenessProbe:
                httpGet:
                  path: /o/health/liveness
                  port: httpslinks
                initialDelaySeconds: 600
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 5
              readinessProbe:
                httpGet:
                  path: /o/health/readiness
                  port: httpslinks
                initialDelaySeconds: 40
                periodSeconds: 5
                successThreshold: 1
                failureThreshold: 100
                timeoutSeconds: 1              
              volumeMounts: 
              {{- if (  .Values.liferay.S3.enabled ) }}
              - mountPath: /liferaydefault/S3
                name: liferay-config-s3-vol
                readOnly: true
              {{- end }}
              {{- if (  .Values.liferay.elastic.enabled ) }}
              - mountPath: /liferaydefault/elastic
                name: liferay-config-elastic-vol
                readOnly: true
              {{- end }}                
              - mountPath: /liferayconfigs/
                name: liferay-config-vol
                readOnly: true   
              - mountPath: /mnt/liferay/scripts
                name: liferay-scripts-vol
                readOnly: true
              - mountPath: /lifekube
                name: lifekube
            volumes:
            - name: lifekube
              emptyDir: {}
            {{- if (  .Values.liferay.S3.enabled ) }}
            - name: liferay-config-s3-vol
              configMap:
                name: {{ .Release.Name }}-liferay-s3-config
                items:
                - key: com.liferay.portal.store.s3.configuration.S3StoreConfiguration
                  path: com.liferay.portal.store.s3.configuration.S3StoreConfiguration.config
                - key: portal-ext.properties
                  path: portal-ext.properties
            {{- end }}
            {{- if (  .Values.liferay.elastic.enabled ) }}
            - name: liferay-config-elastic-vol
              configMap:
                name: {{ .Release.Name }}-liferay-elastic-config
                items:
                - key: com.liferay.portal.search.elasticsearch7.configuration.ElasticsearchConfiguration
                  path: com.liferay.portal.search.elasticsearch7.configuration.ElasticsearchConfiguration.config
            {{- end }}
            - name: liferay-config-vol
              configMap:
                name: {{ .Release.Name }}-liferay-config
                items:
                - key: portal-ext.properties
                  path: portal-ext.properties 
                - key: jgroups-kubernetes.xml
                  path: jgroups-kubernetes.xml
                - key: jgroups-jdbc.xml
                  path: jgroups-jdbc.xml
                - key: tomcat-server.xml 
                  path: tomcat/conf/server.xml 
                - key: tomcat-context.xml
                  path: tomcat/conf/context.xml 
                - key: tomcat-redisson.conf
                  path: tomcat/conf/redisson.conf
            - name: liferay-scripts-vol
              configMap:
                name: {{ .Release.Name }}-liferay-scripts
                items:
                - key: configure.sh
                  path: configure.sh


